MODULE IssueDashboard;

REQUIRE IssueLog, ProjectExternal, Dashboard, DocIssue;

NAMESPACE Project;

newStatus = DATA IssueStatus ();
nameNewStatus 'New status' () = name (newStatus ());

EXTEND FORM options PROPERTIES () nameNewStatus;
DESIGN options {commons {MOVE PROPERTY (nameNewStatus ()); }}

dateTimeCreated (i) <- currentDateTime () WHEN SET (i IS Issue);
author (i) <- currentUser () WHEN SET (i IS Issue);
dateFrom (i) <- currentDate () WHEN SET (i IS Issue);
status (i) <- newStatus () WHEN SET (i IS Issue);

FORM issueDashboard 'My Tasks'

    OBJECTS o = Issue LAST
    PROPERTIES (o) READONLY number, name, descriptionString, dateTimeCreated, dateTimeUpdated, dateFrom, dateTo, doneRatio, estimatedHours, nameProject,
                           nameCustomer, numberDocument, nameAuthor, nameAssignedTo, nameTracker, nameStatus
    PROPERTIES (o) NEWSESSION NEW
    PROPERTIES (o) SHOWIF NOT external (o) NEWSESSION EDIT, DELETE
    
    FILTERGROUP open FILTER 'Open' NOT isClosed (status (o)) DEFAULT
    FILTERGROUP inner FILTER 'Internal' NOT external (o) DEFAULT
    FILTERGROUP my FILTER 'My Tasks' assignedTo (o) = currentUser () OR author (o) = currentUser () DEFAULT
                   FILTER 'Assigned to me' assignedTo (o) = currentUser ()
                   FILTER 'Created by me' author (o) = currentUser ()
                   
    ORDERS number (o)
    
    OBJECTS l = IssueLog
    PROPERTIES (l) READONLY dateTime, nameUser, changes, note
    FILTERS issue (l) == o
;

DESIGN issueDashboard {
    OBJECTS {
        type = SPLITV;
        BOX (o) {fill = 3; }
        BOX (l) {fill = 1; }
    }
}

NAVIGATOR {
    dashboard {
        NEW issueDashboard;
    }
}

note 'Subscribed to notifications' = DATA BOOLEAN (Project, IssueStatus, Employee);

WHEN CHANGED (status (Issue i)) AND (note (project (i), status (i), Employee e) OR note (project (i), PREV (status (i)), e)) DO {
    EMAIL
        SUBJECT CONCAT '', 'Change task status', number (i)
        TO email (e)
        BODY CONCAT '', 'Task status', number (i), 'by project' + name (project (i)), 'changed', 'from' + PREV (nameStatus (i)), 'to' + nameStatus ( i);
}

FORM projectNotifications 'Project notifications'
    OBJECTS p = Project
    PROPERTIES (p) READONLY id, name, identifier, nameCustomer, inactive, nameExternal
    FILTERGROUP active FILTER 'Active' NOT inactive (p) DEFAULT
    
    OBJECTS e = Employee PANEL
    FILTERS e == currentUser ()
    
    OBJECTS s = IssueStatus
    PROPERTIES note (p, s, e) DRAW s
    PROPERTIES (s) READONLY name, order, isClosed
    ORDERS order (s)
;

DESIGN projectNotifications {
    OBJECTS {
        NEW main FIRST {
            fill = 1;
            type = SPLITH;
            MOVE BOX (p) {fill = 3; }
            MOVE BOX (s) {fill = 1; }
        }
    }
}

NAVIGATOR {
    project {
        NEW projectNotifications;
    }
}
