MODULE EmployeeExpense;

REQUIRE Employee, System, Finance;

NAMESPACE Employee;

CLASS Expense 'Expense by employee';
TABLE expense (Expense);

employee = DATA Employee (Expense) NONULL DELETE;
nameEmployee 'Employee' (Expense e) = name (employee (e));

year 'Year' = DATA INTEGER (Expense);
month = DATA Month (Expense);
nameMonth 'Month' (Expense e) = staticCaption (month (e));
numberMonth 'Month number' (Expense e) = number (month (e));
sum 'Amount' = DATA NUMERIC [18,4] (Expense);

CLASS ExpenseType 'Expense type';
TABLE expenseType (ExpenseType);

name 'Name' = DATA ISTRING [100] (ExpenseType) CHARWIDTH 15;
percent 'Loss percentage,%' = DATA NUMERIC [5,2] (ExpenseType);

FORM expenseType 'expense type'
    OBJECTS o = ExpenseType PANEL
    PROPERTIES (o) name, percent
    
    EDIT ExpenseType OBJECT o
;

FORM expenseTypes 'expense types'
    OBJECTS o = ExpenseType
    PROPERTIES (o) READONLY name, percent
    PROPERTIES (o) NEWSESSION NEW, EDIT, DELETE
    
    LIST ExpenseType OBJECT o
;

type = DATA ExpenseType (Expense);
nameType 'Expense type' (Expense e) = name (type (e));

expense = GROUP AGGR Expense e BY employee (e), type (e), year (e), month (e);

FORM expense 'Expense by employee'
    OBJECTS o = Expense PANEL
    PROPERTIES (o) nameEmployee, year, nameMonth, numberMonth, nameType, sum
    
    EDIT Expense OBJECT o
;

sum 'Expense' (Employee e, INTEGER y, Month m, ExpenseType t) = GROUP SUM sum (Expense x) BY employee (x), year (x), month (x), type (x);
lastExpense = GROUP LAST Expense e ORDER e BY employee (e), year (e), month (e), type (e);

changeSumExpense (Employee e, INTEGER y, Month m, ExpenseType t) {
    INPUT s = INTEGER DO {
        
        IF lastExpense (e, y, m, t) THEN {
            
            IF s THEN {
                sum (Expense x) <- s IF x == lastExpense (e, y, m, t) WHERE employee (x) == e AND year (x) == y AND month (x) == m AND type (x ) = t;
            }
            ELSE DELETE Expense x WHERE employee (x) == e AND year (x) == y AND month (x) == m AND type (x) = t;
        }
        ELSE IF s THEN NEW x = Expense {
            
            employee (x) <- e;
            year (x) <- y;
            month (x) <- m;
            type (x) <- t;
            sum (x) <- s;
        }
    }
}

FORM expenses 'Expenses per employee'
    OBJECTS o = Expense LAST
    PROPERTIES (o) READONLY nameEmployee, year, nameMonth, numberMonth, nameType, sum
    PROPERTIES (o) NEWSESSION NEW, EDIT, DELETE
    ORDERS year (o), numberMonth (o), nameEmployee (o), nameType (o), sum (o)
    
    OBJECTS t = ExpenseType PANEL
    PROPERTIES name (t) SELECTOR
    
    OBJECTS y = INTEGER PANEL
    PROPERTIES year 'Year' = VALUE (y)
        
    OBJECTS m = Month
    OBJECTS e = Employee
    PROPERTIES name (e) READONLY, sum (e, y, m, t) COLUMNS (m) HEADER (staticCaption (m)) ON CHANGE changeSumExpense (e, y, m, t)
    PROPERTIES number (m) SHOWIF NULL
    ORDERS name (e), number (m)
    
    FILTERGROUP active FILTER 'Active' NOT inactive (e) DEFAULT
    
    EVENTS ON INIT {
        SEEK expenses.y = extractYear (currentDate ());
    }
;

DESIGN expenses {
    OBJECTS {
        REMOVE BOX (m);
        NEW tabPane {
            type = TABBED;
            fill = 1;
            NEW expenses {
                caption = 'Expenses';
                MOVE BOX (o);
            }
            NEW sumBox {
                caption = 'Caption';
                type = CONTAINERV;
                NEW head {
                    type = CONTAINERH;
                    caption = 'Filters';
                    MOVE PROPERTY (name (t)) {caption = 'Type of flow'; }
                    MOVE PROPERTY (year) {charWidth = 10; }
                }
                MOVE BOX (e);
            }
        }
    }
}

FORM dialogExpenses 'Expenses by employee'
    OBJECTS o = Expense LAST
    PROPERTIES (o) READONLY nameEmployee, year, nameMonth, numberMonth, nameType, sum
    ORDERS year (o), numberMonth (o), nameEmployee (o), nameType (o), sum (o)
    
    LIST Expense OBJECT o
;

NAVIGATOR {
     finance {
        NEW expenses;
    }
}
