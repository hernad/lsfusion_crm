MODULE Equipment;

REQUIRE ContractSubject, Employee;

CLASS Equipment 'Equipment';
TABLE equipment (Equipment);

note 'Note' = DATA ISTRING [250] (Equipment) CHARWIDTH 15;
comment 'Comment' = DATA TEXT (Equipment);

customer = DATA Customer (Equipment);
nameCustomer 'Customer' (Equipment e) = name (customer (e));

contract = DATA Contract (Equipment);
nameContract 'Contract' (Equipment e) = description (contract (e));
nameLegalEntityContract 'Contract Organization' (Equipment e) = name (legalEntity (contract (e)));

agreement = DATA Agreement (Equipment);
nameAgreement 'Agreement' (Equipment e) = description (agreement (e));

CONSTRAINT agreement (Equipment e) AND NOT contract (agreement (e)) == contract (e) CHECKED BY agreement [Equipment]
    MESSAGE 'Agreement does not apply to equipment agreement';

subjectType = DATA SubjectType (Equipment);
nameSubjectType 'Type of subject of the contract' (Equipment e) = name (subjectType (e));

createdUser = DATA User (Equipment);
nameCreatedUser 'Created by user' (Equipment e) = name (createdUser (e));

createdDate 'Creation date' = DATA DATE (Equipment);
createdTime 'Creation time' = DATA TIME (Equipment);
createdDateTime 'Creation date / time' (Equipment e) = dateTimeToDateTime (createdDate (e), createdTime (e));

createdUser (Equipment e) <- currentUser () WHEN SET (e IS Equipment);
createdDate (Equipment e) <- currentDate () WHEN SET (e IS Equipment);
createdTime (Equipment e) <- currentTime () WHEN SET (e IS Equipment);

in (Contract c, SubjectType t) = GROUP SUM 1 BY contract (ContractSubject s), type (s);

CONSTRAINT contract (Equipment e) AND NOT customer (contract (e)) == customer (e) CHECKED BY contract [Equipment] MESSAGE 'The equipment customer is not a contract customer';

WHEN LOCAL CHANGED (contract (Equipment e)) AND NOT CHANGED (customer (e)) DO {
    customer (e) <- customer (contract (e));
}

CLASS EquipmentSerial 'Serial number';
TABLE equipmentSerial (EquipmentSerial);

equipment = DATA Equipment (EquipmentSerial) NONULL DELETE;

number 'Serial number' = DATA ISTRING [250] (EquipmentSerial) CHARWIDTH 15;
equipmentSerial = GROUP AGGR EquipmentSerial s BY number (s);

FORM equipmentSerial 'Serial number'
    OBJECTS o = EquipmentSerial PANEL
    PROPERTIES (o) number
    
    EDIT EquipmentSerial OBJECT o
;

FORM equipmentSerials 'Serial numbers'
    OBJECTS o = EquipmentSerial
    PROPERTIES (o) READONLY number
    PROPERTIES (o) NEWSESSION NEW, EDIT, DELETE
;

FORM dialogEquipmentSerials 'Serial numbers'
    OBJECTS o = EquipmentSerial
    PROPERTIES (o) READONLY number
    
    LIST EquipmentSerial OBJECT o
;

dataQuantitySerial 'Number of serial numbers' = DATA INTEGER (Equipment);
overQuantitySerial 'Number of Serial Numbers' (Equipment e) = GROUP SUM 1 BY equipment (EquipmentSerial s);
quantitySerial 'Quantity of serial numbers' (Equipment e) = OVERRIDE dataQuantitySerial (e), overQuantitySerial (e);

noteEquipment 'Note' (EquipmentSerial s) = note (equipment (s));
quantitySerialEquipment 'Number of Serial Numbers' (EquipmentSerial s) = quantitySerial (equipment (s));
nameCreatedUserEquipment 'Created by user' (EquipmentSerial s) = nameCreatedUser (equipment (s));
createdDateEquipment 'Created Date' (EquipmentSerial s) = createdDate (equipment (s));
createdTimeEquipment 'Creation time' (EquipmentSerial s) = createdTime (equipment (s));
nameContractEquipment 'Contract' (EquipmentSerial s) = nameContract (equipment (s));
nameLegalEntityContractEquipment 'Contract Organization' (EquipmentSerial s) = nameLegalEntityContract (equipment (s));
nameSubjectTypeEquipment 'Contract Item Type' (EquipmentSerial s) = nameSubjectType (equipment (s));

FORM equipment 'Equipment'
    OBJECTS o = Equipment PANEL
    PROPERTIES (o) nameSubjectType, nameCustomer, nameContract, nameAgreement, note, quantitySerial
    
    OBJECTS s = EquipmentSerial
    PROPERTIES (s) number, NEW, DELETE
    FILTERS equipment (s) == o
    
    EDIT Equipment OBJECT o
;

FORM equipments 'Equipment'
    OBJECTS o = Equipment
    PROPERTIES (o) READONLY nameCustomer, note, nameSubjectType, nameContract, nameAgreement, quantitySerial, nameCreatedUser, createdDate, createdTime
    PROPERTIES (o) NEWSESSION NEW, EDIT, DELETE
;

FORM dialogEquipments 'Equipment'
    OBJECTS o = Equipment
    PROPERTIES (o) READONLY nameCustomer, note, nameSubjectType, nameContract, nameAgreement, quantitySerial, nameCreatedUser, createdDate, createdTime
    
    LIST Equipment OBJECT o
;

importEquipments () {
    NEWSESSION {
        LOCAL idCustomer = ISTRING [15] (INTEGER);
        LOCAL idContract = ISTRING [15] (INTEGER);
        LOCAL idEmployee = ISTRING [15] (INTEGER);
        LOCAL subject = ISTRING [15] (INTEGER);
        LOCAL quantity = INTEGER (INTEGER);
        LOCAL date = DATE (INTEGER);
        LOCAL note = TEXT (INTEGER);
        LOCAL serials = TEXT (INTEGER);
        
        INPUT f = FILE DO {
            IMPORT XLS FROM f TO idCustomer, idContract, idEmployee, subject, quantity, date, note, serials;
            
            FOR [GROUP SUM 1 IF INTEGER i> 0 BY trim (subject (i))] (ISTRING [15] str) AND NOT [GROUP MAX SubjectType t BY name (t)] (str) DO NEW t = SubjectType {
                name (t) <- str;
            }
            
            FOR imported (INTEGER i) AND i> 0 DO NEW e = Equipment {
                contract (e) <- contract (idContract (i));
                customer (e) <- OVERRIDE customer (contract (idContract (i))), customer (idCustomer (i));
                createdUser (e) <- employee (idEmployee (i));
                subjectType (e) <- GROUP MAX SubjectType t IF name (t) == trim (subject (i));
                dataQuantitySerial (e) <- quantity (i);
                createdDate (e) <- date (i);
                note (e) <- ISTRING [250] (trim (note (i)));
                comment (e) <- serials (i);
                
                serials (i) <- replace (serials (i), '\ n', '');
                
                FOR serials (i)! = '' AND iterate (INTEGER j, 1, wordCount (serials (i), ';'))
                    AND ISTRING [250] (getWord (serials (i), ';', j))! = '' DO NEW s = EquipmentSerial {
                    
                    equipment (s) <- e;
                    number (s) <- ISTRING [250] (getWord (serials (i), ';', j));
                }
            }
        }
        APPLY;
    }
}
